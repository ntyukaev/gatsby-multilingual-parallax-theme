{"version":3,"file":"component---src-pages-projects-js-5f122b5cfe2d4ff4bc20.js","mappings":"mNAuEA,IAjEoBA,IAAA,IAAC,KAAEC,EAAI,MAAEC,EAAK,SAAEC,EAAQ,QAAEC,EAAO,QAAEC,GAASL,EAAA,OAC9DM,EAAAA,EAAAA,IAACC,EAAAA,KAAI,CACHC,GAAIP,EACJQ,GAAI,CACFC,QAAS,QACTC,MAAO,OACPC,MAAO,UACPC,UAAW,KACXC,SAAU,WACVC,eAAgB,OAChBC,aAAc,KACdC,WAAY,UACZC,WAAY,8DACZ,UAAW,CACTC,UAAW,mBACXN,UAAW,SAIfP,EAAAA,EAAAA,IAAA,OACEG,GAAI,CACFC,QAAS,QACTC,MAAO,OACPS,OAAQ,QACRC,UAAW,SAEbC,IAAKlB,EACLmB,IAAKnB,KAEPE,EAAAA,EAAAA,IAAA,OAAKG,GAAI,CAAEe,QAAS,KAClBlB,EAAAA,EAAAA,IAAA,MACEG,GAAI,CACFgB,cAAe,YACfC,cAAe,OACfC,WAAY,SACZC,WAAY,IAGb1B,IAEHI,EAAAA,EAAAA,IAAA,KACEG,GAAI,CACFoB,EAAG,CACDjB,MAAO,QACPkB,OAAQ,KAIX3B,IAEHG,EAAAA,EAAAA,IAAA,OAAKG,GAAI,CAAEsB,UAAW,WACpBzB,EAAAA,EAAAA,IAAC0B,EAAAA,MAAK,KAAC,cAAkB,MAAGC,EAAAA,EAAAA,GAAO,IAAIC,KAAK7B,GAAU,gBAGrD,C,uHCnDT,MAkEa8B,EAAOA,KAAM7B,EAAAA,EAAAA,IAAC8B,EAAAA,EAAG,MAE9B,UApEiBpC,IAAe,IAADqC,EAAAC,EAAA,IAAb,KAAEC,GAAMvC,EACxB,MAAM,EAAEwC,IAAMC,EAAAA,EAAAA,kBACd,OACEnC,EAAAA,EAAAA,IAACoC,EAAAA,EAAM,CAACxC,MAAOsC,EAAE,cACflC,EAAAA,EAAAA,IAAA,eACGiC,SAAc,QAAVF,EAAJE,EAAMI,gBAAQ,IAAAN,GAAO,QAAPC,EAAdD,EAAgBO,aAAK,IAAAN,OAAjB,EAAJA,EAAuBO,KACtBC,IAAA,IACEC,QAAQ,KAAEC,EAAI,QAAE3C,GAChB4C,aAAa,MAAE/C,EAAK,YAAEgD,EAAW,gBAAEC,IACpCL,EAAA,OACCxC,EAAAA,EAAAA,IAAA,OAAK8C,IAAKJ,EAAMvC,GAAI,CAAE4C,GAAI,EAAGC,GAAI,KAC/BhD,EAAAA,EAAAA,IAACiD,EAAAA,EAAW,CACVlD,QAASA,EACTD,QAAS+C,EACTlD,KAAM+C,EACN9C,MAAOA,GAENgD,GAEC,KAIL,C","sources":["webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/components/project-card.jsx","webpack://@ntyukaev/gatsby-multilingual-parallax-theme/./src/pages/projects.js"],"sourcesContent":["/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport PropTypes from 'prop-types'\nimport { format } from 'date-fns'\nimport { Link, Trans } from 'gatsby-plugin-react-i18next'\n\nconst ProjectCard = ({ link, title, children, preview, updated }) => (\n  <Link\n    to={link}\n    sx={{\n      display: 'block',\n      width: '100%',\n      color: 'primary',\n      boxShadow: 'lg',\n      position: 'relative',\n      textDecoration: 'none',\n      borderRadius: 'lg',\n      background: 'divider',\n      transition: 'all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) !important',\n      '&:hover': {\n        transform: 'translateY(-5px)',\n        boxShadow: 'xl'\n      }\n    }}\n  >\n    <img\n      sx={{\n        display: 'block',\n        width: '100%',\n        height: '10rem',\n        objectFit: 'cover'\n      }}\n      src={preview}\n      alt={preview}\n    />\n    <div sx={{ padding: 4 }}>\n      <h3\n        sx={{\n          textTransform: 'uppercase',\n          letterSpacing: 'wide',\n          fontWeight: 'medium',\n          lineHeight: 1\n        }}\n      >\n        {title}\n      </h3>\n      <p\n        sx={{\n          p: {\n            color: 'white',\n            margin: 0\n          }\n        }}\n      >\n        {children}\n      </p>\n      <div sx={{ textAlign: 'right' }}>\n        <Trans>updated at</Trans>: {format(new Date(updated), 'dd/MM/yyyy')}\n      </div>\n    </div>\n  </Link>\n)\n\nProjectCard.propTypes = {\n  link: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.node,\n  preview: PropTypes.string,\n  updated: PropTypes.string\n}\n\nexport default ProjectCard\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Seo from '../components/seo'\nimport { useTranslation } from 'gatsby-plugin-react-i18next'\nimport Layout from '../components/layout'\nimport ProjectCard from '../components/project-card'\n\nconst Projects = ({ data }) => {\n  const { t } = useTranslation()\n  return (\n    <Layout title={t('Projects')}>\n      <section>\n        {data?.projects?.nodes?.map(\n          ({\n            fields: { path, updated },\n            frontmatter: { title, description, previewImageUrl }\n          }) => (\n            <div key={path} sx={{ pt: 3, pb: 3 }}>\n              <ProjectCard\n                updated={updated}\n                preview={previewImageUrl}\n                link={path}\n                title={title}\n              >\n                {description}\n              </ProjectCard>\n            </div>\n          )\n        )}\n      </section>\n    </Layout>\n  )\n}\n\nProjects.propTypes = {\n  data: PropTypes.object\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    projects: allMarkdownRemark(\n      filter: {\n        fields: {\n          language: { eq: $language }\n          sourceInstanceName: { eq: \"posts\" }\n        }\n      }\n    ) {\n      nodes {\n        fields {\n          updated\n          language\n          path\n        }\n        frontmatter {\n          title\n          description\n          previewImageUrl\n        }\n      }\n    }\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n\nexport const Head = () => <Seo />\n\nexport default Projects\n"],"names":["_ref","link","title","children","preview","updated","jsx","Link","to","sx","display","width","color","boxShadow","position","textDecoration","borderRadius","background","transition","transform","height","objectFit","src","alt","padding","textTransform","letterSpacing","fontWeight","lineHeight","p","margin","textAlign","Trans","format","Date","Head","Seo","_data$projects","_data$projects$nodes","data","t","useTranslation","Layout","projects","nodes","map","_ref2","fields","path","frontmatter","description","previewImageUrl","key","pt","pb","ProjectCard"],"sourceRoot":""}